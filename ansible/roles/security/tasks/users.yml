---
- name: Prepare user output
  set_fact:
    output_user_name: "{{ user_name }}"

# Ugly string construction inside ternary saves some output spam
- name: Determine user home directory for "{{ output_user_name }}"
  set_fact:
    user_home_dir: "{{ (ansible_user_home_dir is defined and user_name == ansible_user) | ternary(ansible_user_home_dir,'/home/'+user_name) }}"

- name: User group for "{{ output_user_name }}"
  group:
    name: "{{ user_name }}"

- name: User "{{ output_user_name }}"
  user:
    name: "{{ user_name }}"
    uid: "{{ user_uid | default(omit) }}"
    group: "{{ user_name }}"
    shell: "{{ user_shell_path | default(omit) }}"
    home: "{{ user_home_dir }}"

- name: User .ssh directory for "{{ output_user_name }}"
  file:
    path: "{{ user_home_dir }}/.ssh/"
    state: directory
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: '0700'

- name: User authorized SSH public keys for "{{ output_user_name }}"
  template:
    src: authorized_keys.j2
    dest: "{{ user_home_dir }}/.ssh/authorized_keys"
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: '0400'
  when: user_keys is defined

- name: Passwordless sudoers for "{{ output_user_name }}"
  lineinfile:
    dest: /etc/sudoers
    regexp: '^{{ user_name }}'
    line: '{{ user_name }} ALL=(ALL) NOPASSWD: ALL'
    state: present
    validate: 'visudo -cf %s'
    mode: 0440
  when:
    - user_nopass_sudo is defined
    - user_nopass_sudo | bool
